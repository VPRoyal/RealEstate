//------->>> Steps in Next JS

==>> First install "redux" and "react-redux" dependencies in NextJs app
==>> Import "provider" from "react-redux" in _app.JS ( root file ) and wrap it on the root element in the Myapp function (which ensure accessibility of store states to every child component of app.js)
==>> Create "store.js" file in root folder and import {createstore} in it and then create a const "store".
==>> Create a reducer folder and create a file "root reducer" which will help to combine different reducers on the basis of keys using a redux function named "CombinedReducers".
==>> The Redux core library includes a utility called combineReducers, which does this same boilerplate step for us. We can replace our hand-written rootReducer with a shorter one generated by combineReducers.
==>> combineReducers accepts an object where the key names will become the keys in your root state object, and the values are the slice reducer functions that know how to update those slices of the Redux state.
==>> Remember, the key names you give to combineReducers decides what the key names of your state object will be!
==>> Now import root reducer to your store.js file and configure store.js with it.
==>> There are three different ways to get data from the store. They are "connect (function)","useSelector (hooks)", "getState (function)".